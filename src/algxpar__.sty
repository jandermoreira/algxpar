%! Package: algxpar
%! Author: Jander Moreira
%! Date: May 8, 2023

\NewDocumentCommand{\AlgVersion}{}{0.95}
\NewDocumentCommand{\AlgDate}{}{2023/05/08}

\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{algxpar}[2023/05/08 v0.95 Algorithms with multiline/paragraph support]


%% Required packages
\RequirePackage{algorithmicx}
\RequirePackage{algpseudocode}
\RequirePackage{ragged2e}
\RequirePackage{listings}
\RequirePackage{xcolor}
\RequirePackage{tcolorbox} % to save verbatim
\RequirePackage{fancyvrb} % to load verbatim preserving tabs
\RequirePackage{pgfopts}
\RequirePackage{amssymb}


%%% Internal commands
\ExplSyntaxOn

% set_keyword:nnn creates or update a keyword in a language
% #1: language (e.g., brazilian)
% #2: keyword (e.g. while)
% #3: value (e.g, enquanto)
\cs_new:Npn \set_keyword:nnn #1#2#3 {
    \tl_clear_new:c { g_keyword_#1_#2_tl }
    \tl_gset:cn { g_keyword_#1_#2_tl } { #3 }
}

% get_keyword:nn returs a keyword in a language
% #1: language (e.g., brazilian)
% #2: keyword (e.g. while)
% returns: keyword text (e.g. enquanto)
\cs_new:Npn \get_keyword:nn #1#2 {
    \mbox{ \tl_use:c { g_keyword_#1_#2_tl } }
}

%%% User commands

% SetKeyword: create or update a keyword in a language
% #1: language (e.g., brazilian)
% #2: keyword (e.g. while)
% #3: value (e.g, enquanto)
\NewDocumentCommand{\SetKeyword}{ O{\axp@Language} m m }{
    \set_keyword:nnn { #1 } { #2 } { #3 }
}

% Keyword: returns a formatted keyword in the current language
% #1: keyword (e.g. while)
\NewDocumentCommand{\Keyword} { O{\axp@Language} m }{
    \mbox{\textcolor{\axp@KeywordColor}{\axp@KeywordFont\get_keyword:nn{#1}{#2}}}
}

% Constant: returns a formatted constant in the current language
% #1: keyword (e.g. True)
\NewDocumentCommand{\Constant} { m }{
    \mbox{\textcolor{\axp@ConstantColor}{\axp@ConstantFont\get_keyword:nn{\axp@Language}{#1}}}
}

% Module: returns a formatted name for a procedure ou function
% #1: name
\NewDocumentCommand{\Module} { m }{
    \mbox{\axp@ModuleStyle\textsc{#1}}
}

% Module: returns a formatted name for a procedure ou function
% #1: name
\NewDocumentCommand{\CommentSymbol} { m }{
    \mbox{\textcolor{\axp@CommentColor}{\axp@CommentFont\axp@CommentSymbol}}
}


% RenewFullyExpandedDocumentCommand: fully expands argument before
%   renewing document command
% #1: macro
% #2: value
\NewDocumentCommand{\RenewFullyExpandedDocumentCommand} { m m }{
    \exp_args:NNnV \RenewDocumentCommand #1 { } { #2 }
}

\ExplSyntaxOff

\NewDocumentCommand{\axp@DisableEnds}{}{%
    \RenewDocumentCommand{\ALG@noend}{}{t}%
    \algtext*{EndWhile}%
    \algtext*{EndFor}%
    \algtext*{EndLoop}%
    \algtext*{EndIf}%
    \algtext*{EndProcedure}%
    \algtext*{EndFunction}%
    \algtext*{EndSwitch}%
    \algtext*{EndCase}%
    \algtext*{EndOtherwise}%
}

\NewDocumentCommand{\axp@EnableEnds}{}{%
    \RenewDocumentCommand{\ALG@noend}{}{f}%
    \algrenewtext{EndWhile}{\Keyword{end}~\Keyword{while}}%
    \algrenewtext{EndFor}{\Keyword{end}~\Keyword{for}}%
    \algrenewtext{EndLoop}{\Keyword{end}~\Keyword{loop}}%
    \algrenewtext{EndIf}{\Keyword{end}~\Keyword{if}}%
    \algrenewtext{EndProcedure}{\Keyword{end}~\Keyword{procedure}}%
    \algrenewtext{EndFunction}{\Keyword{end}~\Keyword{function}}%
    \algrenewtext{EndSwitch}{\Keyword{end}~\Keyword{switch}}%
    \algrenewtext{EndCase}{\Keyword{end}~\Keyword{case}}%
    \algrenewtext{EndOtherwise}{\Keyword{end}~\Keyword{otherwise}}%
}


%% Settings
\newlength{\axp@MaximumCommentWidth}
\newlength{\axp@MinimumCommentWidth}
\newlength{\axp@StatementIndent}
\newif\ifaxp@NoEnd\axp@NoEndfalse  % whether line with 'end' is used or not
\newif\ifaxp@IsStatement\axp@IsStatementfalse % set in \Statep


%% General options
%! formatter = off
\pgfkeys{
    /algxpar/options/.cd,
    % language
    language/.store in = \axp@Language,
    % styles
    text font/.store in = \axp@TextFont,
    text color/.store in = \axp@TextColor,
    text style/.store in = \axp@TextStyle,
    comment font/.store in = \axp@CommentFont,
    comment style/.store in = \axp@CommentStyle,
    comment color/.store in = \axp@CommentColor,
    keyword font/.store in = \axp@KeywordFont,
    keyword color/.store in = \axp@KeywordColor,
    constant font/.store in = \axp@ConstantFont,
    constant color/.store in = \axp@ConstantColor,
    module font/.store in = \axp@ModuleFont,
    module color/.store in = \axp@ModuleColor,
    %
    comment symbol/.store in = \axp@CommentSymbol,
    maximum comment width/.code = {\setlength{\axp@MaximumCommentWidth}{#1}},
    comment separator width/.store in = \axp@CommentSeparatorWidth,
    %
    statement indent/.code = {\setlength{\axp@StatementIndent}{#1}},
    %
    noend/.code = {\axp@DisableEnds},
    no end/.code = {\axp@DisableEnds},
    end/.code = {\axp@EnableEnds},
}
%! formatter = on

\NewDocumentCommand{\AlgSet}{ > { \TrimSpaces } m }{%
    \pgfkeys{
        algxpar/options/.cd,
        /utils/exec = \pgfkeysalsofrom{#1},
    }%
}


%% Languages and translations
\pgfkeys{
    /algxpar/languages/.cd,
    .unknown/.code = { \SetKeyword{\pgfkeyscurrentname}{#1}}
}

\NewDocumentCommand{\AlgLanguageSet}{ > { \TrimSpaces } m > { \TrimSpaces } m }{
    \begingroup
    \AlgSet{language = #1}
    \pgfkeys{
        /algxpar/languages/.cd,
        #2
    }
    \endgroup
}
\input{english.kw}  % always loads default language


% general settings defaults
\AlgSet{
    language = english,
    text font = ,
    text color = .,
    text style = \RaggedRight,
    comment font = \slshape,
    comment color = .!80,
    comment style = \RaggedRight,
    comment symbol = $\triangleright$,
    keyword font = \bfseries,
    keyword color = .,
    constant font = \scshape,
    constant color = .,
    module font = \scshape,
    module color = .,
    statement indent = 1em,
    maximum comment width = 0.3\linewidth,
    comment separator width = 1em,
}


%% Package options
\pgfkeys{
    /algxpar/.cd,
    language/.store in = \axp@Language,
    noend/.is if = axp@NoEnd,
    .unknown/.code = {
        \input{\pgfkeyscurrentname.kw}
        \RenewFullyExpandedDocumentCommand{\axp@Language}{\pgfkeyscurrentname}
    }
}
\pgfkeys{
    /algxpar/.cd,
    language = english,
    noend = false,
}
\ProcessPgfOptions{/algxpar}


% % \axp@ProcessCommandOptions: process command options
% % #1: comment (earlier version, before command text)
% % #2: options to the command
% \NewDocumentCommand{\axp@ProcessCommandOptions}{ m m }{
%     \def\temp{#1}
%     %! formatter = off
%     \ifx\temp\emtpy
%     \DeclareDocumentCommand{\axp@CurrentComment}{}{\relax}
%     \else
%     \DeclareDocumentCommand{\axp@CurrentComment}{}{\relax}
%     \fi
%     %! formatter = on
%     \pgfkeys{
%         /algxpar/.cd,
%         .unknown/.code = {
%             \RenewFullyExpandedDocumentCommand{\axp@CurrentComment}{\pgfkeyscurrentname}
%         }
%     }
%     \pgfkeys{
%         /algxpar/.cd,
%         #2,
%     }
% }


% axp@DefineCommand: defines command structure
% #1: keyword (e.g, while)
% #2: block text (e.g. a > 0)
% #3: complement keyword (e.g. do)
% #4: comment text
% #5: options
\NewDocumentCommand{\axp@DefineCommand}{ m m m m m }{%
    \DeclareDocumentCommand{\axp@CommandKeyword}{}{#1}%
    \DeclareDocumentCommand{\axp@CommandText}{}{#2}%
    \DeclareDocumentCommand{\axp@CommandComplementKeyword}{}{#3}%
    \DeclareDocumentCommand{\axp@CommentText}{}{#4}%
    \def\axp@CommandOptions{#5}% def: to be accepeted in \pgfkeysalsofrom
}


% axp@MakeSingleToken: texto before and after only if token has some width
% #1: text before toke
% #2: token
% #3: text after token
\newlength{\axp@TokenWidth}
\NewDocumentCommand{\axp@MakeSingleToken}{ m m m }{%
    \settowidth{\axp@TokenWidth}{#2}%
    \ifdim\axp@TokenWidth>0pt\relax#1\fi%
    #2%
    \ifdim\axp@TokenWidth>0pt\relax#3\fi%
}

\newif\ifaxp@NoCommentPresent
\newlength{\axp@TextWidth}
\newlength{\axp@CommentWidth}

% axp@CalculateDimensions: calculates the dimensions for the text and comment boxes
% #1: comment
% sets:
% \axp@CommentWidth
% \axp@NoCommetsPresent
\NewDocumentCommand{\axp@CheckNoCommentPresent}{ m }{%
    \settowidth{\axp@CommentWidth}{#1}%
    %! formatter = off
    \ifdim\axp@CommentWidth=0pt\relax%
        \axp@NoCommentPresenttrue% no comments present
    \else
        \axp@NoCommentPresentfalse% yep, we have a comment here
    \fi%
    %! formatter = on
}

% axp@CalculateDimensions: evaluate space needed for text and comments
% #1: nesting ajustment (1 when openning a block; 0 when closing)
% #2: comment
% sets:
% \axp@TextWidth
% \axp@CommentWidth, when needed
\newlength{\axp@CommentSymbolWidth}
\NewDocumentCommand{\axp@CalculateDimensions}{ m m }{%
    \axp@CheckNoCommentPresent{#2}%
    %! formatter = off
    \ifaxp@NoCommentPresent%
        \setlength{\axp@TextWidth}{
            \dimexpr \linewidth - \axp@CurrentTokenWidth - (\algorithmicindent)*(\theALG@nested - #1)
        }%
    \else%
        % With comments
        \settowidth{\axp@CommentSymbolWidth}{\hspace{\axp@CommentSeparatorWidth}\CommentSymbol{}~}%
        \ifdim\axp@CommentWidth>\axp@MaximumCommentWidth\relax%
            \axp@CommentWidth\axp@MaximumCommentWidth%
        \fi%
        \setlength{\axp@TextWidth}{
            \dimexpr \linewidth - \axp@CurrentTokenWidth - (\algorithmicindent)*(\theALG@nested - #1) -
            \axp@CommentWidth - \axp@CommentSymbolWidth
        }%
    \fi%
    %! formatter = on
}

% % todo: remove these commands
% \renewcommand\fbox{\fcolorbox{.!20}{.!5}}
% \setlength{\fboxrule}{0.001pt}


% axp@MakeCommand: builds the command (see axp@DefineCommand)
% #1 (star): star = end block; no star = begin block
\NewDocumentCommand{\axp@MakeCommand}{ s }{%
    \axp@DoCommand{%  ajustment for opening/closing blocks
        \IfBooleanTF{#1}{0}{1}%
    }{%  command
        \axp@MakeSingleToken{}{\axp@CommandKeyword}{ }%
    }{%  text
        \axp@CommandText%
    }{%  command complement
        \axp@MakeSingleToken{ }{\axp@CommandComplementKeyword}{}%
    }{%  comment
        \axp@CommentText%
    }{%  options
        \axp@CommandOptions%
    }%
}

% axp@MakeCommand: builds the command (see axp@DefineCommand)
% #1: 1 when openning block; 0 when closing
% #2: command
% #3: text
% #4: command complement
% #5: comment
% #6: options
\newlength{\axp@CurrentTokenWidth}
\NewDocumentCommand{\axp@DoCommand}{ m m m m m m }{%
    \AlgSet{#6}%
    % Dimensions
    \settowidth{\axp@CurrentTokenWidth}{#2}%
    \axp@CalculateDimensions{#1}{#5}%
    %
    % Making the line: body
    #2%
    %! formatter = off
    % \setlength{\fboxsep}{0pt}\fbox{%
        \parbox[t]{\axp@TextWidth}{%
            \axp@TextStyle%
            \axp@TextFont%
            \ifaxp@IsStatement%
                \setlength{\hangindent}{\axp@StatementIndent}%
            \fi%
            \textcolor{\axp@TextColor}{#3}#4\strut%
        }%
    % }%  fbox
    % Making the line: comment
    \ifaxp@NoCommentPresent\else%
        \hspace{\axp@CommentSeparatorWidth}\CommentSymbol{}~%
        % \setlength{\fboxsep}{0pt}\fbox{%
            \parbox[t]{\axp@CommentWidth}{%
                \axp@CommentStyle%
                \textcolor{\axp@CommentColor}{\axp@CommentFont#5}\strut%
            }%
        % }%  fbox
    \fi%
    %! formatter = on
}


%% Keyword quick references
\NewDocumentCommand{\To}{}{\axp@MakeSingleToken{}{\Keyword{to}}{ }}
\NewDocumentCommand{\DownTo}{}{\axp@MakeSingleToken{}{\Keyword{downto}}{ }}
\NewDocumentCommand{\Step}{}{\axp@MakeSingleToken{}{\Keyword{step}}{ }}
\NewDocumentCommand{\Continue}{}{\Keyword{continue}}
\NewDocumentCommand{\Break}{}{\Keyword{break}}

\NewDocumentCommand{\True}{}{\Constant{true}}
\NewDocumentCommand{\False}{}{\Constant{false}}
\NewDocumentCommand{\Nil}{}{\Constant{nil}}

\newcommand{\Id}[1]{\ensuremath{\textit{\rmfamily#1}}}
% \newcommand{\TextString}[1]{\textrm{\normalfont``{\ttfamily\mbox{#1}}''}}
% \algnewcommand{\VisibleSpace}{\textrm{\color{black!70}\textvisiblespace}}

%% Headings
\NewDocumentCommand{\Description}{}{\item[\Keyword{description}:]}
\NewDocumentCommand{\Input}{}{\item[\Keyword{input}:]}
\NewDocumentCommand{\Output}{}{\item[\Keyword{output}:]}
\RenewDocumentCommand{\Ensure}{}{\item[\Keyword{ensure}:]}
\RenewDocumentCommand{\Require}{}{\item[\Keyword{require}:]}

% Read, write
\NewDocumentCommand{\Set}{ m m }{%
    \PackageWarning{alxpar}{The macro \string\Set\ is no longer supported.}%
    \Id{#1} \gets #2%
}
\NewDocumentCommand{\Read}{}{\Keyword{read} }
\NewDocumentCommand{\Write}{}{\Keyword{write} }

% %% Comments
\newcommand{\axp@commentleftsymbol}{$\triangleright$}
\algnewcommand{\CommentIn}[1]{%
    \axp@commentleftsymbol~\textsl{#1}~\axp@commentrightsymbol%
}
\NewDocumentCommand{\Commentl}{ m D<>{} }{%
    \begingroup%
    \AlgSet{#2}%
    \textcolor{\axp@CommentColor}{\CommentSymbol{}~\axp@CommentFont#1}%
    \endgroup%
}
\RenewDocumentCommand{\Comment}{ m D<>{} }{
    % \settowidth{\axp@CommentWidth}{#1}%
    % %! formatter = off
    % \ifdim\axp@CommentWidth>0pt\relax%
        \hfill\Commentl{#1}<#2>%
    % \fi%
    % %! formatter = on
}

\newlength{\axp@CurrentIndent}

\NewDocumentCommand{\axp@BeginGroup}{}{\begingroup}
\NewDocumentCommand{\axp@EndGroup}{}{%
    \global\edef\axp@SaveIndent{\the\ALG@tlm}%
    \endgroup%
    \setlength{\ALG@tlm}{\axp@SaveIndent}%
}

%% Statep: statement
% #1: old style comment
% #2: text
% #3: comments
% #4: options
\NewDocumentCommand{\Statep}{ O{} +m O{} D<>{} }{%
    \axp@IsStatementtrue%
    \State\axp@DoCommand{1}{}{#2}{}{#1#3}{#4}%
    \axp@IsStatementfalse%
}


%% While
\algblockdefx[While]{While}{EndWhile}{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\While}{ O{} m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{while}}{#2}{\Keyword{do}}{#1#3}{#4}%
    \ALG@makeentity{While}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndWhile}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{while}}{}{}{#1}{#2}%
    \ALG@makeentity{EndWhile}%
    \axp@EndGroup
}


%% Repeat
\algblockdefx[Repeat]{Repeat}{Until}{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: comments
% #2: options
\RenewDocumentCommand{\Repeat}{ O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{repeat}}{}{}{#1}{#2}%
    \ALG@makeentity{Repeat}%
}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\Until}{ O{} m O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{until}}{#2}{}{#1#3}{#4}%
    \ALG@makeentity{Until}%
    \axp@EndGroup
}

%% Loop
\algblockdefx[Loop]{Loop}{EndLoop}{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: comment
% #2: options
\RenewDocumentCommand{\Loop}{ O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{loop}}{}{}{#1}{#2}%
    \ALG@makeentity{Loop}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndLoop}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{loop}}{}{}{#1}{#2}%
    \ALG@makeentity{EndLoop}%
    \axp@EndGroup
}


%% If
\algblockdefx[If]{If}{EndIf}{\axp@MakeCommand}{\axp@MakeCommand*}
% + else if
\algcblockdefx[If]{If}{ElsIf}{EndIf}{\axp@MakeCommand}{\axp@MakeCommand*}
% + else
\algcblockdefx[If]{If}{Else}{EndIf}[1][]{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\If}{ O{} m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{if}}{#2}{\Keyword{then}}{#1#3}{#4}%
    \ALG@makeentity{If}%
}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\ElsIf}{ O{} m O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{else}~\Keyword{if}}{#2}{\Keyword{then}}{#1#3}{#4}%
    \ALG@makeentity{ElsIf}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\Else}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{else}}{}{}{#1}{#2}%
    \ALG@makeentity{Else}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndIf}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{if}}{}{}{#1}{#2}%
    \ALG@makeentity{EndIf}%
    \axp@EndGroup
}


%% Switch
\algblockdefx[Switch]{Switch}{EndSwitch}{\axp@MakeCommand}{\axp@MakeCommand*}
% + case
\algblockdefx[Case]{Case}{EndCase}{\axp@MakeCommand}{\axp@MakeCommand*}
% + otherwise
\algblockdefx[Otherwise]{Otherwise}{EndOtherwise}{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\Switch}{ O{} m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{switch}}{#2}{}{#1#3}{#4}%
    \ALG@makeentity{Switch}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndSwitch}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{switch}}{}{}{#1}{#2}%
    \ALG@makeentity{EndSwitch}%
    \axp@EndGroup
}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\Case}{ O{} m O{} D<>{} }{%
% \axp@BeginGroup
    \axp@DefineCommand{\Keyword{case}}{#2}{\Keyword{do}}{#1#3}{#4}%
    \ALG@makeentity{Case}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndCase}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{case}}{}{}{#1}{#2}%
    \ALG@makeentity{EndCase}%
% \axp@EndGroup
}
% #1: comment
% #2: options
\RenewDocumentCommand{\Otherwise}{ O{} D<>{} }{%
% \axp@BeginGroup
    \axp@DefineCommand{\Keyword{otherwise}}{}{}{#1}{#2}%
    \ALG@makeentity{Otherwise}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndOtherwise}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{otherwise}}{}{}{#1}{#2}%
    \ALG@makeentity{EndOtherwise}%
% \axp@EndGroup
}


% \newcommand{\Range}[3][]{%
%     \ensuremath{%
%         #2%
%         \def\temp{#1}%
%         \mathcal{\ldotp\ldotp}#3
%         \ifx\temp\empty\relax\else{\ensuremath{\mathcal{:}#1}}\fi%
%     }%
% }


%% For, for each, for all
\algblockdefx[For]{For}{EndFor}{\axp@MakeCommand}{\axp@MakeCommand*}
\algblockdefx[For]{ForEach}{EndFor}{\axp@MakeCommand}{\axp@MakeCommand*}
\algblockdefx[For]{ForAll}{EndFor}{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\For}{ O{} m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{for}}{#2}{\Keyword{do}}{#1#3}{#4}%
    \ALG@makeentity{For}%
}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\ForEach}{ O{} m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{foreach}}{#2}{\Keyword{do}}{#1#3}{#4}%
    \ALG@makeentity{ForEach}%
}
% #1: old style comment
% #2: text
% #3: comment
% #4: options
\RenewDocumentCommand{\ForAll}{ O{} m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{forall}}{#2}{\Keyword{do}}{#1#3}{#4}%
    \ALG@makeentity{For}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndFor}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{for}}{}{}{#1}{#2}%
    \ALG@makeentity{EndFor}%
    \axp@EndGroup
}


%% Procedure, function, calls
\newlength{\axp@procedurewidth}
\newlength{\axp@namewidth}
\algblockdefx[Procedure]{Procedure}{EndProcedure}{\axp@MakeCommand}{\axp@MakeCommand*}
% #1: old style comment
% #2: name
% #3: arguments
% #4: comment
% #5: options
\RenewDocumentCommand{\Procedure}{ O{} m m O{} D<>{} }{%
    \axp@BeginGroup
    \axp@DefineCommand{\Keyword{procedure}~\Module{#2}(}{#3)}{}{#4}{#5}%
    \ALG@makeentity{Procedure}%
}
% #1: comment
% #2: options
\RenewDocumentCommand{\EndProcedure}{ O{} D<>{} }{%
    \axp@DefineCommand{\Keyword{end}~\Keyword{procedure}}{}{}{#1}{#2}%
    \ALG@makeentity{EndProcedure}%
    \axp@EndGroup
}



\newlength{\axp@functionwidth}
\algblockdefx{Function}{EndFunction}%
[3][]{%
    \settowidth{\axp@functionwidth}{\algorithmicfunction~}%
    \settowidth{\axp@namewidth}{\textsc{#2}(}%
    \addtolength{\axp@functionwidth}{0.6\axp@namewidth}%
    \algparbox[#1]{\algorithmicfunction\ \textsc{#2}(#3)}{0pt}
}%
{\Keyword{end}\ \algorithmicfunction}
\algrenewcommand\Call[2]{%
    \def\argstmp{#2}%
    \textsc{#1}\ifx\argstmp\empty\mbox{(\hskip0.5ex)}\else(#2)\fi%
}

%% NewLine
\newcommand{\NewLine}{\par}

% %% DefineCode, UseCode, \ShowCode
% \newenvironment{DefineCode}[1]
% {\begingroup\tcbverbatimwrite{\jobname_code_#1.tmp}}
% {\endtcbverbatimwrite\endgroup}
% \newcommand{\UseCode}[1]{\input{\jobname_code_#1.tmp}}
% \newcommand{\ShowCode}[2][]{{\small\VerbatimInput[tabsize=4, #1]%
% {\jobname_code_#2.tmp}}}
%
% \algrenewcommand{\alglinenumber}[1]{%
%     \hspace{-1.5em}\color{black!35}{\scriptsize#1}\raisebox{0.2ex}{\tiny$\blacktriangleright$}%
% }
%
%% axp@algparbox

%! formatter = off
\ifaxp@NoEnd\axp@DisableEnds\fi
%! formatter = on


\endinput

\setlength{\axp@commentwidth}{0pt}
\newcommand{\algparbox}[3][]{\axp@algparbox{#1}{#2}{#3}{1}}


\newlength{\axp@largestcommentwidth}
\setlength{\axp@largestcommentwidth}{0.3\linewidth}
%! formatter = off
\newcommand{\axp@algparbox}[4]{%
    \begingroup%
    \def\temp{#1}%
    \ifx\temp\relax%
    \setlength{\axp@commentwidth}{-2em}%
    \else%
    \settowidth{\axp@commentwidth}{\axp@commentleftsymbol~#1}%
    \ifdim\axp@commentwidth>\axp@largestcommentwidth\relax%
    \setlength{\axp@commentwidth}{\axp@largestcommentwidth}%
    \fi%
    \fi%
    \RenewDocumentCommand{\NewLine}{}{%
        \\\hspace{#3}%
    % \raisebox{0.2ex}{\scalebox{0.75}{\rotatebox{90}{$\curvearrowleft$}~}}%
    }%
    % \setlength{\fboxsep}{0pt}\fbox{%
        \begin{minipage}[t]{\dimexpr\linewidth - (\algorithmicindent)*(\theALG@nested - 1) - \axp@CurrentIndent - \axp@commentwidth - 2em}
            \setlength{\hangindent}{#3}%
            \begin{flushleft}
                #2%
            \end{flushleft}
        \end{minipage}\strut%
    % }%
%    \ifx\temp\relax\else%
%    \hfill\axp@commentleftsymbol\hspace{0.25em}%
%    % \fbox{%
%        \parbox[t]{\axp@commentwidth}{\slshape\RaggedRight#1}%
%    % }%
%    \fi%
    \endgroup%
}
%! formatter = on


